
#查看网络配置
ifconfig
ip addr

#跟踪路由调转节点

tracepath （7版本）
traceroute
#在linux下ping 3下
ping  -c3 192.168.0.1 pi

#监听本地TCP的端口状态

ss -ltn (7版本)
netstat -anpt

#查看Linux7中的网卡的UUID
nmcli connection show 
nmcli device status --连接状态

#更改Centos7中的网卡名称
1、编辑/etc/sysconfig/grub
2、在crashkernel=auto 后增加 net.ifnames=0 bisodevname=0
3、执行grub2-mkconfig -o /boot/grub2/grub.cfg 
4、重启服务器

#查看端口是否被占用
lsof -i :22

#查看每个用户最大允许打开文件数量

ulimit -a

#查看当前系统打开的文件数量

lsof | wc -l  
watch "lsof | wc -l" 

#查看某一进程的打开文件数量

lsof -p pid | wc -l  

#临时设置设置open files数值方法

ulimit -n 65536

永久设置方法
[plain] view plain copy 在CODE上查看代码片派生到我的代码片
vim /etc/security/limits.conf  
在最后加入  
* soft nofile 4096  
* hard nofile 4096  
最前的 * 表示所有用户，可根据需要设置某一用户，例如
[plain] view plain copy 在CODE上查看代码片派生到我的代码片
fdipzone soft nofile 8192  
fdipzone hard nofile 8192  
lsof -p 1234 | wc -l  

* soft nproc 65536
* hard nproc 65536
* soft nofile 65536
* hard nofile 65535
* - sigpending 65536

#内存 查询

ps aux --sort -rss

echo 3 > /proc/sys/vm/drop_caches

ps aux --sort -rss | grep mysql | awk -F '/' '{print $1}'

1. [代码]可以使用一下命令查使用内存最多的10个进程     
ps -aux | sort -k4nr | head -n 10
2. [代码]可以使用一下命令查使用CPU最多的10个进程     
ps -aux | sort -k3nr | head -n 10


3、查看CPU 
[root@localhost ~]#model=`grep "model name" /proc/cpuinfo|head -n 1|sed 's/model name/CPU/'`
[root@localhost ~]# echo $model


lspci                                                    # 查看硬件信息
lspci|grep RAID                                          # 查看是否支持raid
lspci -vvv |grep Ethernet                                # 查看网卡型号
lspci -vvv |grep Kernel|grep driver                      # 查看驱动模块
modinfo tg3                                              # 查看驱动版本(驱动模块)
ethtool -i em1     
 
 
more /proc/cpuinfo                                       # 查看cpu信息
cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c    # 查看cpu型号和逻辑核心数
getconf LONG_BIT                                         # cpu运行的位数
cat /proc/cpuinfo | grep physical | uniq -c              # 物理cpu个数
cat /proc/cpuinfo | grep flags | grep ' lm ' | wc -l     # 结果大于0支持64位
cat /proc/cpuinfo|grep flags  #查看cpu是否支持虚拟化pae支持半虚拟化，IntelVT支持全虚拟化
more /proc/meminfo                                       # 查看内存信息
dmidecode                                                # 查看全面硬件信息
dmidecode | grep "Product Name"                          # 查看服务器型号
dmidecode | grep -P -A5 "Memory\s+Device" | grep Size | grep -v Range    # 查看内存插槽
cat /proc/mdstat                                         # 查看软raid信息


====================================================================================KVM================================================================================

yum groupinstall 'virtual*' -y

yum install qemu-kvm qemu-img virt-manager libvirt libvirt-python python-virtinst libvirt-client virt-install virt-viewer
qemu-kvm：qemu模拟器
qemu-img：qemu磁盘image管理器
virt-install：用来创建虚拟机的命令行工具
libvirt：提供libvirtd daemon来管理虚拟机和控制hypervisor
libvirt-client：提供客户端API用来访问server和提供管理虚拟机命令行工具的virsh实体
virt-viewer：图形控制台
service libvirtd start
判别是否支持虚拟化
[root@localhost ~]# cat /proc/cpuinfo | grep 'vmx' //Intel CPU判断方法
[root@localhost ~]# cat /proc/cpuinfo | grep 'svm' //AMD CPU判断方法
 cat /proc/cpuinfo | grep -E '(vmx|svm)' | awk -F 'ds_cpl' '{print $2}' | awk -F ' ' '{print $1}'
grep -E '(vmx|svm)' /proc/cpuinfo --color
virt-manager

常用virsh指令
1）virsh list 列出当前虚拟机列表，不包括未启动的
2）virsh list --all 列出所有虚拟机，包括所有已经定义的虚拟机
3）virsh destroy vm-name 关闭虚拟机
4）virsh start vm-name 启动虚拟机
5）virsh edit vm-name 编辑虚拟机xml文件
6）virsh undefine vm-name 删除虚拟机
7）virsh shutdown vm-name 停止虚拟机
8）virsh reboot vm-name 重启虚拟机
9）virsh autostart vm-name 虚拟机随宿主机启动
virt-install --virt-type kvm --name kvm-demo --boot network,cdrom,menu=on --ram 2048 --cdrom=/mnt/CentOS-6.7-x86_64-bin-DVD1.iso --graphics vnc,listen=0.0.0.0 --noautoconsole --os-type=linux --os-variant=rhel6 --accelerate --disk path=/data/UnicomSMS/kvm-demo.qcow2,size=5,format=qcow2,bus=virtio --bridge=br0,model=virtio --autostart 



===========================================================================配置本地YUM================================================================================
yum list all                ##列出所有安转包
yum list installed          ###列出已经安装的
yum list available          ###列出没有安装的
yum remove software         ###卸载软件
yum install software        ###安装软件
yum search 关键字            ###搜索与关键字相关的软件
yum whatprovides 文件        ###搜索包含此文件的包
yum reinstall software      ###从新安装软件
yum localinstall 第三方软件  ##安装该软件并解决依赖关系
yum info software           ###查询软件信息
yum groups list             ###列出软件组
yum groups install          ###安装组
yum groups remove           ###卸载组
yum groups info             ###查看组信息
自动搜索最快镜像插件：   yum install yum-fastestmirror
安装yum图形窗口插件：    yum install yumex
查看可能批量安装的列表： yum grouplist

1 安装
yum install 全部安装
yum install package1 安装指定的安装包package1
yum groupinsall group1 安装程序组group1

2 更新和升级
yum update 全部更新
yum update package1 更新指定程序包package1
yum check-update 检查可更新的程序
yum upgrade package1 升级指定程序包package1
yum groupupdate group1 升级程序组group1

3 查找和显示
yum info package1 显示安装包信息package1
yum list 显示所有已经安装和可以安装的程序包
yum list package1 显示指定程序包安装情况package1
yum groupinfo group1 显示程序组group1信息yum search string 根据关键字string查找安装包

4 删除程序
yum remove &#124; erase package1 删除程序包package1
yum groupremove group1 删除程序组group1
yum deplist package1 查看程序package1依赖情况

5 清除缓存
yum clean packages 清除缓存目录下的软件包
yum clean headers 清除缓存目录下的 headers
yum clean oldheaders 清除缓存目录下旧的 headers
yum clean, yum clean all (= yum clean packages; yum clean oldheaders) 清除缓存目录下的软件包及旧的headers

[rhel-media]: yum源的名称，可自定义。
name=linuxprobe : yum仓库的名称，可自定义。
baseurl=file:///media/cdrom :提供方式包括FTP（ftp://..）、HTTP（http://..）、本地（file:///..）
enabled=1 : 设置此源是否可用，1为可用，0为禁用。
gpgcheck=1 : 设置此源是否校验文件，1为校验，0为不校验。
gpgkey=file:///media/cdrom/RPM-GPG-KEY-redhat-release :若为校验请指定公钥文件地址。

mdkir /mnt/cdrom
mount /dev/cdrom /mnt
umount /mnt

[UnicomSMS]
name=Linux Server
baseurl=file:///mnt/
enable=1
gpgcheck=1

rpm --import RPM-GPG-KEY-redhat-release

#RHEL/CentOS 7.x/6.x/5.x开启EPEL仓库

RHEL/CentOS 7 64bit

## RHEL/CentOS 7 64-Bit ##
# wget http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-9.noarch.rpm
# rpm -ivh epel-release-7-9.noarch.rpm


RHEL/CentOS 6 32-64 Bit

## RHEL/CentOS 6 32-Bit ##
# wget http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
# rpm -ivh epel-release-6-8.noarch.rpm
## RHEL/CentOS 6 64-Bit ##
# wget http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
# rpm -ivh epel-release-6-8.noarch.rpm


RHEL/CentOS 5 32-64 Bit

## RHEL/CentOS 5 32-Bit ##
# wget http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm
# rpm -ivh epel-release-5-4.noarch.rpm
## RHEL/CentOS 5 64-Bit ##
# wget http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm
# rpm -ivh epel-release-5-4.noarch.rpm


RHEL/CentOS 4 32-64 Bit

## RHEL/CentOS 4 32-Bit ##
# wget http://download.fedoraproject.org/pub/epel/4/i386/epel-release-4-10.noarch.rpm
# rpm -ivh epel-release-4-10.noarch.rpm
## RHEL/CentOS 4 64-Bit ##
# wget http://download.fedoraproject.org/pub/epel/4/x86_64/epel-release-4-10.noarch.rpm
# rpm -ivh epel-release-4-10.noarch.rpm


#查看Linxu 系统硬盘型号
hdparm -i /dev/sda

#Centos 7.x 初始化配置

#关闭系统Selinux
[root@localhost ~]/usr/sbin/setenforce 0  #临时关闭
[root@localhost ~]# vi /etc/selinux/config
#SELINUX=enforcing
SELINUX=disabled
#重启机器，查看selinux状态
[root@localhost ~]# sestatus
SELinux status:                 disabled

#关闭Firewalld

1、firewalld的基本使用
启动： systemctl start firewalld
查看状态： systemctl status firewalld 
停止： systemctl disable firewalld
禁用： systemctl stop firewalld
 
2.systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。
启动一个服务：systemctl start firewalld.service
关闭一个服务：systemctl stop firewalld.service
重启一个服务：systemctl restart firewalld.service
显示一个服务的状态：systemctl status firewalld.service
在开机时启用一个服务：systemctl enable firewalld.service
在开机时禁用一个服务：systemctl disable firewalld.service
查看服务是否开机启动：systemctl is-enabled firewalld.service
查看已启动的服务列表：systemctl list-unit-files|grep enabled
查看启动失败的服务列表：systemctl --failed

3.配置firewalld-cmd

查看版本： firewall-cmd --version
查看帮助： firewall-cmd --help
显示状态： firewall-cmd --state
查看所有打开的端口： firewall-cmd --zone=public --list-ports
更新防火墙规则： firewall-cmd --reload
查看区域信息:  firewall-cmd --get-active-zones
查看指定接口所属区域： firewall-cmd --get-zone-of-interface=eth0
拒绝所有包：firewall-cmd --panic-on
取消拒绝状态： firewall-cmd --panic-off
查看是否拒绝： firewall-cmd --query-panic
 
那怎么开启一个端口呢
添加
firewall-cmd --zone=public --add-port=3306/tcp --permanent    （--permanent永久生效，没有此参数重启后失效）
重新载入
firewall-cmd --reload
查看
firewall-cmd --zone=public --query-port=3306/tcp
删除
firewall-cmd --zone=public --remove-port=80/tcp --permanent


#.tar.gz 
解压：tar zxvf FileName.tar.gz 
压缩：tar zcvf FileName.tar.gz DirName --remove-files


#WIFI
airmon-ng start wlan0
airodump-ng  wlan0mon
airodump-ng -c 11  --bssid D8:24:BD:78:2C:B8 -w /usr/local/ wlan0mon
mdk3 wlan0mon a -a 5C:63:BF:46:49:A0 -c 2000
macof -i eht0
yersinia -G


#Centos7.X
vi /etc/profile   
JAVA_HOME=/usr/local/jdk1.8   
JRE_HOME=/usr/local/jdk1.8/jre   
CLASSPATH=.:$JRE_HOME/lib:$JAVA_HOME/lib/tools.jar   
PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH   
export JAVA_HOME CLASSPATH PATH JRE_HOME   
source /etc/profile


#清华大学
deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free
#中科大kali源
deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib
#阿里云kali源
deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib



