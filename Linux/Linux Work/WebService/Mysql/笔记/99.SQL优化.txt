SQL性能优化:

1.模糊匹配:
    尽量避免在一个复杂查询里面使用 LIKE '%parm1%'，百分号会导致相关列的索引无法使用。

2.索引:
  不要在建立索引的数据列上进行下列操作:
	a.避免对索引字段进行计算操作
	b.避免在索引字段上使用not，<>，!=
	c.避免在索引列上使用IS NULL和IS NOT NULL
	d.避免在索引列上出现数据类型转换
	e.避免在索引字段上使用函数
	f.避免建立索引的列中使用空值

3.避免复杂操作:
    部分UPDATE、SELECT 语句 写得很复杂（经常嵌套多级子查询），可以考虑适当拆成几步，
  先生成一些临时数据表，再进行关联操作。

4.用 UNION ALL 代替 UNION:
    UNION 因为会将各查询子集的记录做比较，故比起UNION ALL ，通常速度都会慢上许多。
  一般来说，如果使用UNION ALL能满足要求的话，务必使用UNION ALL。

5.在WHERE 语句中，尽量避免对索引字段进行计算操作。

6.避免在WHERE子句中使用in、not in、or 或者having，
  可以使用 exist 和 not exist 代替 in 和 not in。

7.避免使用 select * 。

8.排序:
    避免使用耗费资源的操作，带有 DISTINCT, UNION, MINUS, INTERSECT, ORDER BY 的
  SQL语句会启动SQL引擎执行，耗费资源的排序(SORT)功能。DISTINCT需要一次排序操作,
  而其他的至少需要执行两次排序。

9.临时表:慎重使用临时表可以极大的提高系统性能。
